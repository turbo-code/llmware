# Workflow to build (and eventually test) wheels.

name: Build Wheels

on:
  workflow_dispatch:
  
jobs:
  build_sdist:
    name: Build sdist
    runs-on: ubuntu-20.04
    outputs:
      SDIST_NAME: ${{ steps.sdist.outputs.SDIST_NAME }}
  
    steps:
      # Checkout the native code
      - name: Checkout native code
        uses: actions/checkout@v4
  
      - name: Install Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
     
      #     # Install Linux native dependencies
      # - name: Install native dependencies
      #   if: runner.os == 'Linux'
      #   run: |
      #     sudo apt-get update && sudo apt-get install -y gcc libxml2 libpng-dev libmongoc-dev libzip4

      # # Install Mac native dependencies
      # - name: Install native dependencies
      #   if: runner.os == 'MacOS'
      #   run: |
      #     brew install mongo-c-driver libpng libzip libtiff zlib
      #     echo $(brew list)

      - name: Install build dependencies
        run: python -m pip install build twine

      - name: Build sdist
        id: sdist
        run: |
          python -m build --sdist
          python ci/export_sdist_name.py
  
      - name: Upload sdist result
        uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: dist/*.tar.gz
          if-no-files-found: error
  
  build_wheels:
    needs: build_sdist
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.cibw_archs }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_BEFORE_BUILD: >-
        rm -rf {package}/build
      CIBW_BEFORE_BUILD_WINDOWS: >-
        rm -rf {package}/build
      CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: >-
        delvewheel repair -w {dest_dir} {wheel}
      CIBW_AFTER_BUILD: >-
        twine check {wheel} 
      CIBW_CONFIG_SETTINGS: setup-args="--vsenv"
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
      CIBW_SKIP: "*-musllinux_aarch64"
      CIBW_TEST_COMMAND: >-
        python {package}/ci/check_version_number.py
      # Apple Silicon machines are not available for testing, so silence the
      # warning from cibuildwheel. Remove the skip when they're available.
      CIBW_TEST_SKIP: "*-macosx_arm64"
      MACOSX_DEPLOYMENT_TARGET: "10.12"
      MPL_DISABLE_FH4: "yes"
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            cibw_archs: "x86_64"
          - os: ubuntu-20.04
            cibw_archs: "aarch64"
          # - os: windows-latest
          #   cibw_archs: "auto64"
          - os: macos-11
            cibw_archs: "x86_64 arm64"
  
    steps:
      - name: Set up QEMU
        if: matrix.cibw_archs == 'aarch64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
  
      - name: Download sdist
        uses: actions/download-artifact@v3
        with:
          name: sdist
          path: dist/

      # Install Linux native dependencies
      - name: Install native dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update && sudo apt-get install -y gcc libxml2 libpng-dev libmongoc-dev libzip4

      # Install Mac native dependencies
      - name: Install native dependencies
        if: runner.os == 'MacOS'
        run: |
          brew install mongo-c-driver libpng libzip libtiff zlib
          echo $(brew list)
  
      - name: Build wheels for CPython 3.9
        uses: pypa/cibuildwheel@7da7df1efc530f07d1945c00934b8cfd34be0d50 # v2.16.1
        with:
          package-dir: dist/${{ needs.build_sdist.outputs.SDIST_NAME }}
        env:
          CIBW_BUILD: "cp39-*"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}
  
      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl
          if-no-files-found: error